<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Jundi Mubarok</title>
    <link>http://localhost:1313/zh-cn/posts/</link>
    <description>Recent content in Posts on Jundi Mubarok</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 01 Jun 2025 10:00:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/zh-cn/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GitHub 风格提示框测试</title>
      <link>http://localhost:1313/zh-cn/posts/test-alert/</link>
      <pubDate>Sun, 01 Jun 2025 10:00:00 +0800</pubDate>
      <guid>http://localhost:1313/zh-cn/posts/test-alert/</guid>
      <description>&lt;h1 id=&#34;github-风格提示框测试&#34;&gt;GitHub 风格提示框测试&lt;/h1&gt;&#xA;&lt;p&gt;本文用于测试新的 GitHub 风格提示框功能和折叠功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;提示框语法&#34;&gt;提示框语法&lt;/h2&gt;&#xA;&lt;h3 id=&#34;注意提示框&#34;&gt;注意提示框&lt;/h3&gt;&#xA;&lt;div&#xD;&#xA;    class=&#34;alert alert-note my-6 overflow-hidden rounded-lg transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&#xD;&#xA;    style=&#34;background-color: color-mix(in srgb, var(--color-note) 10%, transparent);&#xD;&#xA;              border-left-color: var(--color-note);&#xD;&#xA;              --hover-bg: color-mix(in srgb, var(--color-note) 15%, transparent);&#34;&#xD;&#xA;    onmouseover=&#34;this.style.backgroundColor = this.style.getPropertyValue(&#39;--hover-bg&#39;)&#34;&#xD;&#xA;    onmouseout=&#34;this.style.backgroundColor = &#39;color-mix(in srgb, var(--color-note) 10%, transparent)&#39;&#34;&#xD;&#xA;    role=&#34;alert&#34;&#xD;&#xA;    aria-labelledby=&#34;alert-0-title&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34; flex items-center justify-between px-6 pt-6 pb-3&#34;&#xD;&#xA;      &gt;&#xD;&#xA;      &lt;div class=&#34;flex items-center gap-3&#34;&gt;&#xD;&#xA;        &#xD;&#xA;        &lt;h4&#xD;&#xA;          id=&#34;alert-0-title&#34;&#xD;&#xA;          class=&#34;m-0 font-semibold text-foreground/90&#34;&gt;&#xD;&#xA;          注意&#xD;&#xA;        &lt;/h4&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      &#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      id=&#34;alert-0-content&#34;&#xD;&#xA;      class=&#34;alert-content  px-6 pb-6&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;prose prose-sm text-foreground/90 max-w-none&#34;&gt;&#xD;&#xA;        &lt;p&gt;这是一个注意提示框。用于显示用户应该注意的有用信息，即使在快速浏览内容时也应该注意。&lt;/p&gt;</description>
    </item>
    <item>
      <title>KaTeX 和 Mermaid 测试</title>
      <link>http://localhost:1313/zh-cn/posts/katex-mermaid-test/</link>
      <pubDate>Wed, 17 Jan 2024 10:00:00 +0800</pubDate>
      <guid>http://localhost:1313/zh-cn/posts/katex-mermaid-test/</guid>
      <description>&lt;h1 id=&#34;katex-和-mermaid-测试&#34;&gt;KaTeX 和 Mermaid 测试&lt;/h1&gt;&#xA;&lt;p&gt;本文用于测试 KaTeX 数学公式渲染和 Mermaid 图表功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;mermaid-图表测试&#34;&gt;Mermaid 图表测试&lt;/h2&gt;&#xA;&lt;h3 id=&#34;流程图&#34;&gt;流程图&lt;/h3&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;&#xD;&#xA;  graph TD&#xD;&#xA;    A[开始] --&amp;gt; B{是否为用户？}&#xD;&#xA;    B --&amp;gt;|是| C[显示用户界面]&#xD;&#xA;    B --&amp;gt;|否| D[显示登录页面]&#xD;&#xA;    C --&amp;gt; E[用户操作]&#xD;&#xA;    D --&amp;gt; F[用户登录]&#xD;&#xA;    F --&amp;gt; G{登录成功？}&#xD;&#xA;    G --&amp;gt;|是| C&#xD;&#xA;    G --&amp;gt;|否| H[显示错误信息]&#xD;&#xA;    H --&amp;gt; D&#xD;&#xA;    E --&amp;gt; I[结束]&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&#xD;&#xA;&lt;h3 id=&#34;序列图&#34;&gt;序列图&lt;/h3&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;&#xD;&#xA;  sequenceDiagram&#xD;&#xA;    participant 用户&#xD;&#xA;    participant 浏览器&#xD;&#xA;    participant 服务器&#xD;&#xA;    participant 数据库&#xD;&#xA;&#xD;&#xA;    用户-&amp;gt;&amp;gt;浏览器: 输入网址&#xD;&#xA;    浏览器-&amp;gt;&amp;gt;服务器: 发送HTTP请求&#xD;&#xA;    服务器-&amp;gt;&amp;gt;数据库: 查询数据&#xD;&#xA;    数据库--&amp;gt;&amp;gt;服务器: 返回数据&#xD;&#xA;    服务器--&amp;gt;&amp;gt;浏览器: 返回HTML&#xD;&#xA;    浏览器--&amp;gt;&amp;gt;用户: 显示页面&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&#xD;&#xA;&lt;h3 id=&#34;甘特图&#34;&gt;甘特图&lt;/h3&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;pre class=&#34;mermaid&#34;&gt;&#xD;&#xA;  gantt&#xD;&#xA;    title 项目开发时间线&#xD;&#xA;    dateFormat  YYYY-MM-DD&#xD;&#xA;    section 设计阶段&#xD;&#xA;    需求分析           :done,    des1, 2024-01-01,2024-01-05&#xD;&#xA;    UI设计            :done,    des2, 2024-01-06, 2024-01-12&#xD;&#xA;    原型制作           :active,  des3, 2024-01-13, 2024-01-18&#xD;&#xA;    section 开发阶段&#xD;&#xA;    前端开发           :         dev1, 2024-01-19, 2024-02-15&#xD;&#xA;    后端开发           :         dev2, 2024-01-19, 2024-02-20&#xD;&#xA;    数据库设计         :         dev3, 2024-01-19, 2024-01-25&#xD;&#xA;    section 测试阶段&#xD;&#xA;    单元测试           :         test1, 2024-02-16, 2024-02-25&#xD;&#xA;    集成测试           :         test2, 2024-02-21, 2024-03-01&#xD;&#xA;    用户测试           :         test3, 2024-02-26, 2024-03-05&#xD;&#xA;&lt;/pre&gt;&#xD;&#xA;&#xD;&#xA;&lt;h2 id=&#34;katex-测试&#34;&gt;KaTeX 测试&lt;/h2&gt;&#xA;&lt;h3 id=&#34;行内公式&#34;&gt;行内公式&lt;/h3&gt;&#xA;&lt;p&gt;这是一个行内公式：$E = mc^2$，爱因斯坦的质能等价公式。&lt;/p&gt;</description>
    </item>
    <item>
      <title>代码高亮测试</title>
      <link>http://localhost:1313/zh-cn/posts/code-highlighting-test/</link>
      <pubDate>Tue, 16 Jan 2024 10:00:00 +0800</pubDate>
      <guid>http://localhost:1313/zh-cn/posts/code-highlighting-test/</guid>
      <description>&lt;h1 id=&#34;代码高亮测试&#34;&gt;代码高亮测试&lt;/h1&gt;&#xA;&lt;p&gt;本文用于测试新的代码高亮功能，包括语法高亮、复制按钮、语言显示等。&lt;/p&gt;&#xA;&lt;h2 id=&#34;javascript&#34;&gt;JavaScript&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        JAVASCRIPT&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-0&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;折叠&#34;&#xD;&#xA;          aria-label=&#34;折叠&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;折叠&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-0&#34;&#xD;&#xA;        title=&#34;复制&#34;&#xD;&#xA;        aria-label=&#34;复制&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;复制&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-0&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fibonacci&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fibonacci&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fibonacci&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fibonacci&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`第10个斐波那契数是：&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// 异步/等待&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;asyncFunction&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/api/data&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;获取数据时出错：&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        点击展开查看更多&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-0&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已复制&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已选择&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;展开&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;展开&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;折叠&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;折叠&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;带行号的代码块&#34;&gt;带行号的代码块&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        PYTHON&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-1&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;折叠&#34;&#xD;&#xA;          aria-label=&#34;折叠&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;折叠&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-1&#34;&#xD;&#xA;        title=&#34;复制&#34;&#xD;&#xA;        aria-label=&#34;复制&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;复制&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-1&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 带行号的 Python 代码&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;asyncio&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;typing&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;DataProcessor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;List&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;process&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Optional&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;处理数据并返回结果&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;total&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s1&#34;&gt;&amp;#39;processed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;17&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;18&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;19&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;item&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;validate_item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;21&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;processed&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;item&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;22&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;23&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        点击展开查看更多&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-1&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已复制&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已选择&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;展开&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;展开&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;折叠&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;折叠&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;高亮特定行&#34;&gt;高亮特定行&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        GO&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-2&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;折叠&#34;&#xD;&#xA;          aria-label=&#34;折叠&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;折叠&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-2&#34;&#xD;&#xA;        title=&#34;复制&#34;&#xD;&#xA;        aria-label=&#34;复制&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;复制&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-2&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;main&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 2&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 3&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 这一行将被高亮&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 4&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 5&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 6&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;你好，世界！&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 这一行也将被高亮&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 7&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 8&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Println&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;// 这一行也将被高亮&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt; 9&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;计数：%d\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;ln&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        点击展开查看更多&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-2&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已复制&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已选择&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;展开&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;展开&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;折叠&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;折叠&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;带文件名的代码块&#34;&gt;带文件名的代码块&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        api.ts&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-3&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;折叠&#34;&#xD;&#xA;          aria-label=&#34;折叠&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;折叠&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-3&#34;&#xD;&#xA;        title=&#34;复制&#34;&#xD;&#xA;        aria-label=&#34;复制&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;复制&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-3&#34;&gt;&#xD;&#xA;    &lt;div class=&#34;highlight&#34; filename=&#34;api.ts&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// TypeScript API&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ApiResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;message&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;User&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;id&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;email&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;avatar?&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ApiClient&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;Record&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;apiKey?&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;...(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;apiKey&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Authorization&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;sb&#34;&gt;`Bearer &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;apiKey&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;kr&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;endpoint&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ApiResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;endpoint&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;this.headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ok&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;k&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`HTTP 错误！状态：&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;post&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;endpoint&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;any&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ApiResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;baseURL&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}${&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;endpoint&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;sb&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;this.headers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nx&#34;&gt;body&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;JSON.stringify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;});&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;json&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;client&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ApiClient&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;https://api.example.com&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;your-api-key&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;getUsers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;kr&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;client&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;kr&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;User&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;/users&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;获取用户时出错：&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        点击展开查看更多&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-3&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已复制&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已选择&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;展开&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;展开&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;折叠&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;折叠&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;纯文本代码块&#34;&gt;纯文本代码块&lt;/h2&gt;&#xA;&lt;div&#xD;&#xA;  class=&#34;code-block-container border-border bg-card my-6 overflow-hidden rounded-xl border shadow-sm transition-all duration-200 ease-out hover:-translate-y-0.5 hover:shadow-md&#34;&gt;&#xD;&#xA;  &#xD;&#xA;  &lt;div&#xD;&#xA;    class=&#34;code-block-header bg-muted/30 border-border flex items-center justify-between border-b px-4 py-3&#34;&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;div class=&#34;text-muted-foreground flex-shrink-0&#34;&gt;&#xD;&#xA;        &#xD;&#xA;  &lt;svg class=&#34;h-4 w-4&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;      &lt;span class=&#34;text-muted-foreground text-sm font-medium&#34;&gt;&#xD;&#xA;        PLAINTEXT&#xD;&#xA;      &lt;/span&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    &lt;div class=&#34;flex items-center gap-2&#34;&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;          class=&#34;collapse-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;          data-code-id=&#34;code-4&#34;&#xD;&#xA;          data-default-state=&#34;expanded&#34;&#xD;&#xA;          data-collapsed=&#34;false&#34;&#xD;&#xA;          data-auto-collapse-lines=&#34;30&#34;&#xD;&#xA;          data-auto-collapse-height=&#34;400&#34;&#xD;&#xA;          data-collapsed-height=&#34;120&#34;&#xD;&#xA;          title=&#34;折叠&#34;&#xD;&#xA;          aria-label=&#34;折叠&#34;&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-icon&#34;&gt;&#xD;&#xA;            &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z&#34;/&gt;&lt;/svg&gt;&#xD;&#xA;          &lt;/span&gt;&#xD;&#xA;          &lt;span class=&#34;collapse-text hidden sm:inline&#34;&#xD;&#xA;            &gt;折叠&lt;/span&#xD;&#xA;          &gt;&#xD;&#xA;        &lt;/button&gt;&#xD;&#xA;      &lt;button&#xD;&#xA;        class=&#34;copy-code-btn text-muted-foreground hover:text-primary hover:bg-primary/10 focus:ring-primary/20 flex items-center gap-1.5 rounded-md px-2 py-1 text-xs font-medium transition-all duration-200 ease-out focus:ring-2 focus:outline-none&#34;&#xD;&#xA;        data-code-id=&#34;code-4&#34;&#xD;&#xA;        title=&#34;复制&#34;&#xD;&#xA;        aria-label=&#34;复制&#34;&gt;&#xD;&#xA;        &lt;span class=&#34;copy-icon&#34;&gt;&#xD;&#xA;          &#xD;&#xA;  &lt;svg class=&#34;h-3 w-3&#34;&#xD;&#xA;    fill=&#34;none&#34;&#xD;&#xA;    stroke=&#34;currentColor&#34;&#xD;&#xA;    viewBox=&#34;0 0 24 24&#34;&gt;&lt;path stroke-linecap=&#34;round&#34; stroke-linejoin=&#34;round&#34; stroke-width=&#34;2&#34; d=&#34;M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z&#34; /&gt;&#xD;&#xA;&lt;/svg&gt;&#xD;&#xA;        &lt;/span&gt;&#xD;&#xA;        &lt;span class=&#34;copy-text hidden sm:inline&#34;&#xD;&#xA;          &gt;复制&lt;/span&#xD;&#xA;        &gt;&#xD;&#xA;      &lt;/button&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &lt;div class=&#34;code-block-content relative&#34; id=&#34;code-4&#34;&gt;&#xD;&#xA;    &lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;这是一个纯文本代码块。&#xD;&#xA;它不应该有语法高亮。&#xD;&#xA;你可以在这里测试复制功能。&#xD;&#xA;&#xD;&#xA;function test() {&#xD;&#xA;    console.log(&amp;#34;这是一个测试。&amp;#34;);&#xD;&#xA;}&lt;/code&gt;&lt;/pre&gt;&#xD;&#xA;    &#xD;&#xA;    &lt;div&#xD;&#xA;      class=&#34;collapse-overlay to-card/90 pointer-events-none absolute inset-0 bg-gradient-to-b from-transparent via-transparent opacity-0 transition-opacity duration-300&#34;&gt;&#xD;&#xA;      &lt;div&#xD;&#xA;        class=&#34;text-muted-foreground bg-card/80 border-border/50 hover:bg-primary/10 hover:text-primary hover:border-primary/30 absolute bottom-4 left-1/2 -translate-x-1/2 cursor-pointer rounded-full border px-3 py-1.5 text-xs backdrop-blur-sm transition-all duration-200&#34;&gt;&#xD;&#xA;        点击展开查看更多&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;  &lt;/div&gt;&#xD;&#xA;&lt;/div&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;(function() {&#xD;&#xA;  const codeId = &#39;code-4&#39;;&#xD;&#xA;  const copyBtn = document.querySelector(&#39;.copy-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const collapseBtn = document.querySelector(&#39;.collapse-code-btn[data-code-id=&#34;&#39; + codeId + &#39;&#34;]&#39;);&#xD;&#xA;  const codeContainer = document.getElementById(codeId);&#xD;&#xA;&#xD;&#xA;  if (!codeContainer) return;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (copyBtn) {&#xD;&#xA;    const copyIcon = copyBtn.querySelector(&#39;.copy-icon&#39;);&#xD;&#xA;    const copyText = copyBtn.querySelector(&#39;.copy-text&#39;);&#xD;&#xA;&#xD;&#xA;    copyBtn.addEventListener(&#39;click&#39;, async function() {&#xD;&#xA;      try {&#xD;&#xA;        &#xD;&#xA;        let codeText = &#39;&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const codeTableCell = codeContainer.querySelector(&#39;.lntd:last-child code&#39;);&#xD;&#xA;        if (codeTableCell) {&#xD;&#xA;          codeText = codeTableCell.textContent || codeTableCell.innerText;&#xD;&#xA;        } else {&#xD;&#xA;          &#xD;&#xA;          const codeElement = codeContainer.querySelector(&#39;code&#39;);&#xD;&#xA;          if (codeElement) {&#xD;&#xA;            &#xD;&#xA;            const hasInlineLineNumbers = codeElement.querySelector(&#39;.ln&#39;);&#xD;&#xA;            if (hasInlineLineNumbers) {&#xD;&#xA;              &#xD;&#xA;              const codeLines = codeElement.querySelectorAll(&#39;.cl&#39;);&#xD;&#xA;              if (codeLines.length &gt; 0) {&#xD;&#xA;                codeText = Array.from(codeLines)&#xD;&#xA;                  .map(line =&gt; {&#xD;&#xA;                    const text = line.textContent || line.innerText;&#xD;&#xA;                    &#xD;&#xA;                    return text.replace(/\n+$/, &#39;&#39;);&#xD;&#xA;                  })&#xD;&#xA;                  .join(&#39;\n&#39;)&#xD;&#xA;                  .replace(/\n+$/, &#39;&#39;); &#xD;&#xA;              } else {&#xD;&#xA;                &#xD;&#xA;                const allText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;                codeText = allText.replace(/^\d+/gm, &#39;&#39;).replace(/^\s+/gm, &#39;&#39;);&#xD;&#xA;              }&#xD;&#xA;            } else {&#xD;&#xA;              &#xD;&#xA;              codeText = codeElement.textContent || codeElement.innerText;&#xD;&#xA;            }&#xD;&#xA;          } else {&#xD;&#xA;            &#xD;&#xA;            codeText = codeContainer.textContent || codeContainer.innerText;&#xD;&#xA;          }&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        codeText = codeText.trim();&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        await navigator.clipboard.writeText(codeText);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M5 13l4 4L19 7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已复制&#39;;&#xD;&#xA;        }&#xD;&#xA;        copyBtn.classList.add(&#39;text-green-600&#39;);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          copyIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          copyBtn.classList.remove(&#39;text-green-600&#39;);&#xD;&#xA;        }, 2000);&#xD;&#xA;&#xD;&#xA;      } catch (err) {&#xD;&#xA;        console.error(&#39;复制失败:&#39;, err);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        const range = document.createRange();&#xD;&#xA;        const codeElement = codeContainer.querySelector(&#39;code&#39;) || codeContainer;&#xD;&#xA;        range.selectNodeContents(codeElement);&#xD;&#xA;        const selection = window.getSelection();&#xD;&#xA;        selection.removeAllRanges();&#xD;&#xA;        selection.addRange(range);&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        if (copyText) {&#xD;&#xA;          copyText.textContent = &#39;已选择&#39;;&#xD;&#xA;        }&#xD;&#xA;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          if (copyText) {&#xD;&#xA;            copyText.textContent = &#39;复制&#39;;&#xD;&#xA;          }&#xD;&#xA;          selection.removeAllRanges();&#xD;&#xA;        }, 2000);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  if (collapseBtn) {&#xD;&#xA;    const collapseIcon = collapseBtn.querySelector(&#39;.collapse-icon&#39;);&#xD;&#xA;    const collapseText = collapseBtn.querySelector(&#39;.collapse-text&#39;);&#xD;&#xA;    const collapseOverlay = codeContainer.querySelector(&#39;.collapse-overlay&#39;);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    let codeElement = codeContainer.querySelector(&#39;pre.chroma&#39;);&#xD;&#xA;    if (!codeElement) {&#xD;&#xA;      codeElement = codeContainer.querySelector(&#39;pre&#39;);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    const defaultState = collapseBtn.dataset.defaultState || &#39;expanded&#39;;&#xD;&#xA;    const isCollapsedAttr = collapseBtn.dataset.collapsed === &#39;true&#39;;&#xD;&#xA;    const autoCollapseLines = parseInt(collapseBtn.dataset.autoCollapseLines) || 30;&#xD;&#xA;    const autoCollapseHeight = parseInt(collapseBtn.dataset.autoCollapseHeight) || 400;&#xD;&#xA;    const collapsedHeight = parseInt(collapseBtn.dataset.collapsedHeight) || 120;&#xD;&#xA;&#xD;&#xA;    let isCollapsed = false;&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    function initCollapse() {&#xD;&#xA;      &#xD;&#xA;      const shouldCollapse = isCollapsedAttr ||&#xD;&#xA;                           defaultState === &#39;collapsed&#39; ||&#xD;&#xA;                           shouldAutoCollapse();&#xD;&#xA;&#xD;&#xA;      if (shouldCollapse) {&#xD;&#xA;        setCollapsed(true, false); &#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function shouldAutoCollapse() {&#xD;&#xA;      &#xD;&#xA;      if (codeElement) {&#xD;&#xA;        const lines = codeElement.querySelectorAll(&#39;.line, .cl&#39;);&#xD;&#xA;        const height = codeElement.offsetHeight;&#xD;&#xA;        return lines.length &gt; autoCollapseLines || height &gt; autoCollapseHeight;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const containerHeight = codeContainer.offsetHeight;&#xD;&#xA;      if (containerHeight &gt; autoCollapseHeight) {&#xD;&#xA;        return true;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      const textContent = codeContainer.textContent || codeContainer.innerText || &#39;&#39;;&#xD;&#xA;      const estimatedLines = textContent.split(&#39;\n&#39;).length;&#xD;&#xA;      return estimatedLines &gt; autoCollapseLines;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function setCollapsed(collapsed, animate = true) {&#xD;&#xA;      if (!collapseOverlay) return;&#xD;&#xA;&#xD;&#xA;      isCollapsed = collapsed;&#xD;&#xA;&#xD;&#xA;      if (collapsed) {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = collapsedHeight + &#39;px&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;hidden&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;1&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;auto&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath stroke-linecap=\u0022round\u0022 stroke-linejoin=\u0022round\u0022 stroke-width=\u00222\u0022 d=\u0022M19 9l-7 7-7-7\u0022 \/\u003e\r\n\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;展开&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;展开&#39;;&#xD;&#xA;&#xD;&#xA;      } else {&#xD;&#xA;        &#xD;&#xA;        codeContainer.style.maxHeight = &#39;&#39;;&#xD;&#xA;        codeContainer.style.overflow = &#39;&#39;;&#xD;&#xA;        collapseOverlay.style.opacity = &#39;0&#39;;&#xD;&#xA;        collapseOverlay.style.pointerEvents = &#39;none&#39;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        collapseIcon.innerHTML = `\r\n  \u003csvg class=\u0022h-3 w-3\u0022\r\n    fill=\u0022none\u0022\r\n    stroke=\u0022currentColor\u0022\r\n    viewBox=\u00220 0 24 24\u0022\u003e\u003cpath fill=\u0022currentColor\u0022 d=\u0022M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6l-6 6z\u0022\/\u003e\u003c\/svg\u003e`;&#xD;&#xA;        if (collapseText) {&#xD;&#xA;          collapseText.textContent = &#39;折叠&#39;;&#xD;&#xA;        }&#xD;&#xA;        collapseBtn.title = &#39;折叠&#39;;&#xD;&#xA;      }&#xD;&#xA;&#xD;&#xA;      &#xD;&#xA;      if (animate) {&#xD;&#xA;        codeContainer.style.transition = &#39;max-height 0.3s ease-out&#39;;&#xD;&#xA;        setTimeout(() =&gt; {&#xD;&#xA;          codeContainer.style.transition = &#39;&#39;;&#xD;&#xA;        }, 300);&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    function toggleCollapse() {&#xD;&#xA;      setCollapsed(!isCollapsed, true);&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    collapseBtn.addEventListener(&#39;click&#39;, toggleCollapse);&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    if (collapseOverlay) {&#xD;&#xA;      collapseOverlay.addEventListener(&#39;click&#39;, () =&gt; {&#xD;&#xA;        if (isCollapsed) {&#xD;&#xA;          setCollapsed(false, true);&#xD;&#xA;        }&#xD;&#xA;      });&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    &#xD;&#xA;    initCollapse();&#xD;&#xA;  }&#xD;&#xA;})();&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&lt;h2 id=&#34;行内代码&#34;&gt;行内代码&lt;/h2&gt;&#xA;&lt;p&gt;这是一个行内代码示例：&lt;code&gt;const x = 42;&lt;/code&gt; 和 &lt;code&gt;npm install&lt;/code&gt; 以及 &lt;code&gt;git commit -m &amp;quot;更新&amp;quot;&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown 语法测试文档</title>
      <link>http://localhost:1313/zh-cn/posts/markdown-%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/</link>
      <pubDate>Mon, 15 Jan 2024 10:00:00 +0800</pubDate>
      <guid>http://localhost:1313/zh-cn/posts/markdown-%E8%AF%AD%E6%B3%95%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/</guid>
      <description>这是一个包含各种 Markdown 语法的测试文档，用于验证文档样式的完整性。</description>
    </item>
  </channel>
</rss>
